{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"김세진_kmeans_implemented_by_tensorflow","version":"0.3.2","provenance":[{"file_id":"https://github.com/algorithm-ai/deep-learning-engineer/blob/homeworks/homework/homework4/kmeans_implemented_by_tensorflow.ipynb","timestamp":1562671303614}],"collapsed_sections":[]},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"colab_type":"text","id":"-SG8srkJ2upM"},"source":[" ╔══<i><b>&nbsp;Alai-DeepLearning&nbsp;</b></i>══════════════════════════════════╗\n","###  &nbsp;&nbsp; **✎&nbsp;&nbsp;Week 4. Tensorflow basis**\n","# Homework 2. Tensorflow로 K-Means 구현하기\n","\n","### _Objective_\n","1. Tensorflow 을 이용해서 K-Means 알고리즘을 구현합니다.\n","\n","\n","╚═══════════════════════════════════════════════╝"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"yChRyhPI3gzv","colab":{}},"source":["%matplotlib inline\n","import tensorflow as tf \n","import numpy as np\n","import tensorflow as tf\n","import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bu6ToKkY2b5A","colab_type":"text"},"source":["<br>\n","<br>\n","## 예제 데이터셋 )"]},{"cell_type":"code","metadata":{"id":"r-1vPYP32b5A","colab_type":"code","outputId":"f4870ac5-1a93-40fd-bb4b-1f568ef775ce","colab":{"base_uri":"https://localhost:8080/","height":215},"executionInfo":{"status":"ok","timestamp":1563244164443,"user_tz":-540,"elapsed":2118,"user":{"displayName":"김세진","photoUrl":"","userId":"12416191158956989717"}}},"source":["# 예제 데이터셋 준비하기\n","!wget https://s3.ap-northeast-2.amazonaws.com/pai-datasets/alai-deeplearning/kmeans_dataset.txt\n","dataset = np.loadtxt(\"./kmeans_dataset.txt\")"],"execution_count":2,"outputs":[{"output_type":"stream","text":["--2019-07-16 02:29:23--  https://s3.ap-northeast-2.amazonaws.com/pai-datasets/alai-deeplearning/kmeans_dataset.txt\n","Resolving s3.ap-northeast-2.amazonaws.com (s3.ap-northeast-2.amazonaws.com)... 52.219.58.45\n","Connecting to s3.ap-northeast-2.amazonaws.com (s3.ap-northeast-2.amazonaws.com)|52.219.58.45|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 1520 (1.5K) [text/plain]\n","Saving to: ‘kmeans_dataset.txt’\n","\n","kmeans_dataset.txt  100%[===================>]   1.48K  --.-KB/s    in 0s      \n","\n","2019-07-16 02:29:23 (60.6 MB/s) - ‘kmeans_dataset.txt’ saved [1520/1520]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab_type":"code","id":"kNGnWsIb0RBW","outputId":"55204efe-5f3b-4d83-8d7f-edeade9fbbc3","colab":{"base_uri":"https://localhost:8080/","height":281},"executionInfo":{"status":"ok","timestamp":1563244167388,"user_tz":-540,"elapsed":629,"user":{"displayName":"김세진","photoUrl":"","userId":"12416191158956989717"}}},"source":["# 예제 데이터셋 시각화\n","plt.title(\"The Distribution of Point\")\n","plt.scatter(dataset[:,0],dataset[:,1])\n","plt.show()"],"execution_count":3,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"alE47AhF2b5J","colab_type":"text"},"source":["\n","<br>\n","<br>\n","##  알고리즘 탐색하기\n","---\n","K-means의 알고리즘 순서 \n","\n","1. 초기 중심점을 설정하기 위해 K개의 점 생성(일반적으로 임의)\n","2. 중심점과 각 데이터 사이의 거리를 계산\n","3. 각 데이터를 거리가 가장 가까운 군집으로 할당\n","4. 각 군집 별 점들의 평균을 계산 후, 군집의 중심점을 다시 계산\n","5. 2~4의 과정을 통해 각 데이터 별 군집이 바뀌지 않았으면, 이 과정을 끝냄\n","\n","아래 코드는 Numpy 로 K-means 을 구현한 코드 입니다.<br>\n","\n","---"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"n2rzyOJ13MY8","colab":{}},"source":["def cluster_kmeans(dataset, k):    \n","    # (1) 중심점 초기화\n","    min_x = dataset[:,0].min()\n","    max_x = dataset[:,0].max() \n","    min_y = dataset[:,1].min()\n","    max_y = dataset[:,1].max() \n","\n","    center_x = np.random.uniform(low=min_x, high=max_x, size=k)\n","    center_y = np.random.uniform(low=min_y, high=max_y, size=k)\n","    centroids = np.stack([center_x,center_y],axis=-1)\n","    \n","    # (2) ~ (5) 순회\n","    num_data = dataset.shape[0]\n","    cluster_per_point = np.zeros((num_data)) # 각 점 별 군집\n","\n","    counter = 0\n","    while True:\n","        prev_cluster_per_point = cluster_per_point\n","        \n","        # (2) 거리 계산\n","        diff_mat = (centroids.reshape(-1,1,2) - dataset.reshape(1,-1,2))\n","        dists = np.sqrt((diff_mat**2).sum(axis=-1))\n","        # (3) 각 데이터를 거리가 가장 가까운 군집으로 할당\n","        cluster_per_point = dists.argmin(axis=0)\n","        \n","        # (4) 각 군집 별 점들의 평균을 계산 후, 군집의 중심점을 다시 계산\n","        for i in range(k):\n","            centroids[i] = dataset[cluster_per_point==i].mean(axis=0)\n","\n","        if np.all(prev_cluster_per_point == cluster_per_point):\n","            break\n","\n","        counter += 1\n","        plt.title(\"{}th Distribution of Dataset\".format(counter))\n","        for idx, color in enumerate(['r','g','b','y']):\n","            mask = (cluster_per_point==idx)\n","            plt.scatter(dataset[mask,0],dataset[mask,1],\n","                        label='dataset', c=color)\n","            plt.scatter(centroids[:,0],centroids[:,1],\n","                        s=200, label=\"centroid\", marker='+')\n","        plt.show()\n","    \n","    return centroids"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_W7dii_I2b5N","colab_type":"code","outputId":"aa137c0e-4b66-49db-8704-174f7c2dc2e6","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1563244180192,"user_tz":-540,"elapsed":1454,"user":{"displayName":"김세진","photoUrl":"","userId":"12416191158956989717"}}},"source":["cluster_kmeans(dataset, 4)"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXYAAAEICAYAAABLdt/UAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAHYNJREFUeJzt3X+QHGd95/H3dyV5dYpBOduKOCzt\nrnUcAmEDKa99UYncqSyFA+HYlapAIIsT7JAtHFJlX/nKQPYKMOe9HJVc4qoDitIRHIL2YpIAAYyo\ngByEgZMDa2NjLCPOUVbyD7wsNrENitcr7ff+6F5rdjQ/d3q6n37686qa0m7PTPczs5pvP/N9vs/T\n5u6IiEg8BopugIiIZEuBXUQkMgrsIiKRUWAXEYmMAruISGQU2EVEIqPALpjZ+81sX8b7/JKZ/XZG\n+/plMztS8/uMme3OYt/p/h4ws51Z7a/DY5qZ3WpmPzGzb+V5bImfAnuEzGyfmf3QzJ42sx+Y2dtr\n7ttpZo/0uH83s5+Z2U/N7Akzu8PMfqP2Me7+enf/RIf7ekmrx7j71919ay9trjnen5vZzXX7f4W7\nH8xi/114DfArwCZ3v7T+TjN7m5mdSt/jn5rZP6Ungpd2eoBGr7Uf8jqOdE6BPU5/CIy4+wuBK4Cb\nzezijI/xKnc/G9gK/DnwITN7X8bHwMxWZ73PQAwDM+7+sxaPOZS+x+uB3cC/AHeb2YV5NFBKzN11\ni/hGEnh/CLwJ+DmS4LAI/DS9vRh4P/BXwF8AzwAPAKMt9unAS+q2/TrwLHBu+vtB4O3pzy8BvgY8\nBfwY+FS6/c50Xz9L2/IbwE7gEeBdwOPAJ5e21RxrBngPcBj4CXArsDa9723ANxq1FxgHFoDn0uN9\noWZ/u9OfB4FbgMfS2y3AYHrfUttuAH6Uvq9Xt3ifXgx8HngSeAj43XT776Tv1am0HTc1eO4ZryPd\nfjvwNzW//3X6Pj2Vvp+vSLc3e63vBv4x/TsfBn6tZl8N/07pfS8DvpK+liPAm1odR7eCP/dFN0C3\nPv1h4SPAiTSo3QOcnW5fFiTTbe9PA80eYBVJj/+uFvtuFNjXACeB16e/H+R0YP9LYILkG+Ja4DXN\n9pW27yTwwTTI/qv6NqeB+HvAZuAc4JvAzel9ZwTE2mOQfLu4ue7+GU4H9g8AdwG/AGwA/i/w3+ra\n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\nyPx/1z+Oa+2QGqkAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"execute_result","data":{"text/plain":["array([[ 2.6265299 ,  3.10868015],\n","       [-3.38237045, -2.9473363 ],\n","       [-2.46154315,  2.78737555],\n","       [ 2.80293085, -2.7315146 ]])"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"Bck5xSdp5MKo"},"source":["## \\[ 문제 : 텐서플로우를 이용해 K-Means 구현하기 \\]\n","\n","텐서플로우는 numpy와 달리, Dataflow Programming 방식으로 동작합니다. <br>\n","우선 연산을 결정하고, 반복적인 연산은 Session 시에 진행해야 합니다.<br>\n","\n"]},{"cell_type":"code","metadata":{"id":"_-Z_k7gR2b5R","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":394},"outputId":"bd6e4661-5196-407a-dd30-351ea048eff9","executionInfo":{"status":"error","timestamp":1563257408823,"user_tz":-540,"elapsed":640,"user":{"displayName":"김세진","photoUrl":"","userId":"12416191158956989717"}}},"source":["dataset_tf = tf.Variable(dataset, name= \"dataset_tf\")\n","\n","#K_tf = tf.placeholder_with_default(4,(),name='K')\n","K_tf = 4\n","\n","min_x_tf = tf.Variable(tf.reduce_min(dataset[:,0]), name = \"min_x_tf\")\n","max_x_tf = tf.Variable(tf.reduce_max(dataset[:,0]), name = \"max_x_tf\")\n","min_y_tf = tf.Variable(tf.reduce_min(dataset[:,1]), name = \"min_y_tf\")\n","max_y_tf = tf.Variable(tf.reduce_max(dataset[:,1]), name = \"max_y_tf\")\n","\n","centr_x_tf = tf.random_uniform(shape = [4], minval = min_x_tf, maxval = max_x_tf, dtype = tf.float64, name = \"cent_x_tf\")\n","centr_y_tf = tf.random_uniform(shape = [4], minval = min_y_tf, maxval = max_y_tf, dtype = tf.float64, name = \"cent_y_tf\")\n","\n","centroids_tf = tf.stack([centr_x_tf, centr_y_tf], axis = -1, name = \"centroids_tf\")\n","\n","num_data_tf = tf.shape(dataset_tf)[0]\n","cluster_per_point_tf = tf.zeros([num_data_tf])#제로스 싸이즈 자리에 리스트나 튜플형태로 넣어서 그걸 shape으로 읽는듯\n","\n","counter = 0\n","\n","\n","#print(centroids_tf.shape())  \n","  \n","while True:\n","  prev_cluster_per_point_tf = cluster_per_point_tf\n","\n","  diff_mat_tf = tf.math.subtract(tf.reshape(centroids_tf,[-1,1,2]),tf.reshape(dataset_tf,[1,-1,2]))\n","\n","  dists_tf = tf.sqrt(tf.reduce_sum((diff_mat_tf**2), axis = -1))\n","\n","  cluster_per_point = tf.math.argmin(dists_tf, axis=0)\n","  \n","  for i in range(K_tf):\n","    centroids_tf[i] = tf.reduce_mean(dataset_tf[cluster_per_point_tf == i],axis=0)\n","    \n","  if tf.reduce_all(prev_cluster_per_point_tf == cluster_per_point_tf):\n","    break\n","  \n","  counter +=1\n","  \n","  plt.title(\"{}th Distribution of Dataset\".format(counter))\n","  for idx, color in enumerate(['r','g','b','y']):\n","      mask_tf = (cluster_per_point_tf==idx)\n","      plt.scatter(dataset_tf[mask_tf,0],dataset_tf[mask_tf,1],\n","                  label='dataset_tf', c=color)\n","      plt.scatter(centroids_tf[:,0],centroids_tf[:,1],\n","                  s=200, label=\"centroid_tf\", marker='+')\n","  plt.show()\n","\n","return centroids_tf\n","\n","   \n","\n","init = tf.global_variables_initializer()\n","\n","sess = tf.Session()\n","sess.run(init)\n","#print(sess.run(dataset_tf))\n","print(sess.run(num_data_tf))\n","print(sess.run(tf.shape(dataset_tf)))\n","print(sess.run(cluster_per_point))\n","sess.run(cluster_per_point_tf)"],"execution_count":64,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-64-86ccd5ccad69>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m   \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mK_tf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 34\u001b[0;31m     \u001b[0mcentroids_tf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreduce_mean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset_tf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcluster_per_point_tf\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     35\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     36\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreduce_all\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprev_cluster_per_point_tf\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mcluster_per_point_tf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py\u001b[0m in \u001b[0;36m_SliceHelperVar\u001b[0;34m(var, slice_spec)\u001b[0m\n\u001b[1;32m    932\u001b[0m   \"\"\"\n\u001b[1;32m    933\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 934\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0m_slice_helper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvar\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mslice_spec\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvar\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    935\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    936\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py\u001b[0m in \u001b[0;36m_slice_helper\u001b[0;34m(tensor, slice_spec, var)\u001b[0m\n\u001b[1;32m    598\u001b[0m   \u001b[0;34m(\u001b[0m\u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mslice_spec\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mslice_spec\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mdtypes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbool\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    599\u001b[0m   \u001b[0;34m(\u001b[0m\u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mslice_spec\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mslice_spec\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mbool\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 600\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mboolean_mask\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtensor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtensor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mslice_spec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    601\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    602\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mslice_spec\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py\u001b[0m in \u001b[0;36mboolean_mask\u001b[0;34m(tensor, mask, name, axis)\u001b[0m\n\u001b[1;32m   1363\u001b[0m     \u001b[0mshape_tensor\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtensor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_shape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1364\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mndims_mask\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1365\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"mask cannot be scalar.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1366\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mndims_mask\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1367\u001b[0m       raise ValueError(\n","\u001b[0;31mValueError\u001b[0m: mask cannot be scalar."]}]},{"cell_type":"code","metadata":{"id":"kjbKcATqqXis","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}